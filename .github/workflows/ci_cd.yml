name: Code Quality

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - master

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", 3.11]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
#        if: steps.cache-pip.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: |
          pytest --cov=github_actions_utils --cov-branch --cov-report=xml
          coverage xml
          pwd
          cat coverage.xml

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        if: matrix.python-version == '3.11'
        with:
          args: -Dsonar.python.version=${{ matrix.python-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@v2.2.3
        with:
          flag-name: run-${{ matrix.python-version }}
          measure: true
          parallel: true


  finish:
    name: Finish Coveralls
    needs: tests
    if: ${{ always() }}
    runs-on: ubuntu-latest

    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2.2.3
        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  linters:
    name: Linters
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Linter
        uses: heitorpolidoro/lint-with-PR-comments@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          linters: flake8

  auto-merge:
    name: Auto Merge
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.actor == 'heitorpolidoro'
    needs:
      - tests
      - linters

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Wait checks to finish
        run: gh pr checks --watch --required -i 1 --fail-fast $GITHUB_HEAD_REF
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto Merge if is my PR
        env:
          GH_TOKEN: ${{ secrets.HEITORPOLIDORO_PAT }}
        run: |
            gh pr merge --squash --admin $GITHUB_HEAD_REF
