name: CI/CD

on:
  workflow_dispatch:
    branches:
      - master
  push:

jobs:
# Except master
  create-PR:
    name: Create Pull Request
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Creating Pull Request
        uses: heitorpolidoro/autocreate-pr@master
        with:
          automerge: true
        env:
          heitorpolidoro: ${{ secrets.HEITORPOLIDORO_PAT }}

# Any branch
  tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", 3.11]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        if: matrix.python-version != '3.11'
        run: |
          pytest

      - name: Run tests
        if: matrix.python-version == '3.11'
        run: |
          pytest --cov --cov-report=xml

      - name: Send to Coverall
        env:
          GITHUB_TOKEN: ${{ secrets.HEITORPOLIDORO_PAT }}
        if: matrix.python-version == '3.11'
        run: COVERALLS_REPO_TOKEN=${{ secrets.COVERALLS_REPO_TOKEN }} coveralls


  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  linters:
    name: Linters
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Linter
        uses: heitorpolidoro/lint-with-PR-comments@debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          linters: flake8

# Only master
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'
    needs:
      - tests
      - linters
      - sonarcloud

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: release
        uses: heitorpolidoro/auto-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.HEITORPOLIDORO_PAT }}

  deploy:
    name: Publish in PyPi
    runs-on: ubuntu-latest
    needs: create-release
    if: github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/* --verbose